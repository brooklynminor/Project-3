[{"C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\views\\Profile.js":"1","C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\Navbar.js":"2","C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\SignUp.js":"3","C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\BookNow.js":"4","C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\views\\RegisterPet.js":"5","C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\SignIn.js":"6","C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\utils\\API.js":"7"},{"size":1227,"mtime":1606693775165,"results":"8","hashOfConfig":"9"},{"size":3122,"mtime":1606684085477,"results":"10","hashOfConfig":"9"},{"size":2655,"mtime":1606683935209,"results":"11","hashOfConfig":"9"},{"size":203,"mtime":1606684055496,"results":"12","hashOfConfig":"9"},{"size":680,"mtime":1606599012972,"results":"13","hashOfConfig":"9"},{"size":961,"mtime":1606683839738,"results":"14","hashOfConfig":"9"},{"size":412,"mtime":1606692127977,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k2de0b",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\views\\Profile.js",[],"C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\Navbar.js",[],"C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\SignUp.js",["31"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SignUpForm extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password: '',\n            name: '',\n            hasAgreed: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        console.log('The form was submitted with the following data:');\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n        <div className=\"container-md  mt-5\">\n            <form onSubmit={this.handleSubmit} className=\"form-group\">\n              <div className=\"form-group\">\n                <label className=\"form-group__Label\" htmlFor=\"name\">Full Name</label>\n                <input type=\"text\" id=\"name\" className=\"form-control\" placeholder=\"Enter your full name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-group__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-group__Label\" htmlFor=\"email\">E-Mail Address</label>\n                <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-group__CheckboxLabel\">\n                    <input className=\"form-Checkbox\" type=\"checkbox\" name=\"Agreed\" value={this.state.hasAgreed} onChange={this.handleChange} /> I agree all statements in <a href=\"\" className=\"form-TermsLink\">terms of service</a>\n                </label>\n              </div>\n\n              <div className=\"form-group\">\n                  <button className=\"btn btn-primary mr-3 form-Button mr-20\">Sign Up</button> <Link to=\"./SignIn.js\" className=\"form-group__Link\">I'm already member</Link>\n              </div>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default SignUpForm;","C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\BookNow.js",[],"C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\views\\RegisterPet.js",[],"C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\components\\SignIn.js",[],"C:\\Users\\lhalv\\School-U-of-T\\bootcamp\\Project-3\\client\\src\\utils\\API.js",[],{"ruleId":"32","severity":1,"message":"33","line":55,"column":171,"nodeType":"34","endLine":55,"endColumn":209},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]